# Write a function nearly_equal to test whether two strings are nearly equal. Two strings a and b are nearly equal when a can be generated by a single mutation on b.

import sys
def nearly_equal(x,word):
        letters=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
        l=[]
# inserting a character 
        for i in range(len(word)+1):
                for j in letters:
                        a=word[:i]+j+word[i:]
                        l.append(a)

# deleting a character
        for i in range(len(word)):
                a=word[:i]+word[i+1:]
                l.append(a)

# replacing a character
        for i in range(len(word)):
                for j in letters:
                        a=word[:i]+j+word[i+1:]
                        l.append(a)

# swapping two characters
        for i in range(len(word)):
                a=word[:i]+word[i+1:i+2]+word[i:i+1]+word[i+2:]
                l.append(a)
	if x in l:
		print True
	else:
		print False
		
        
nearly_equal(sys.argv[2],sys.argv[1])
