#Write a function mutate to compute all words generated by a single mutation on a given word. A mutation is defined as inserting a character, deleting a character, replacing a character, or swapping 2 consecutive characters in a string. For simplicity consider only letters from a to z.

import sys
def mutate(x,word):
	letters=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
	l=[]
# inserting a character 
	for i in range(len(word)+1):
		for j in letters:
			a=word[:i]+j+word[i:]
			l.append(a)
	
# deleting a character
	for i in range(len(word)):
		a=word[:i]+word[i+1:]
		l.append(a)
	
# repalcing a character
	for i in range(len(word)):
		for j in letters:
			a=word[:i]+j+word[i+1:]
			l.append(a)
	
# swapping two characters
	for i in range(len(word)):
		a=word[:i]+word[i+1:i+2]+word[i:i+1]+word[i+2:]
		l.append(a)
	if x in l:
		print True
	else:
		print False
mutate(sys.argv[1],sys.argv[2])
